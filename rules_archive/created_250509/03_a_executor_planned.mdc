---
description: このルールは、`02_planner` から渡された実行計画に基づき、具体的なStepを順次実行することを担うCellを記述します。
globs: 
alwaysApply: false
---
# Cell 3a: Planned Execution Executor Rule

## 1. 役割と責任

このルールは、`02_planner` から渡された実行計画に基づき、具体的なStepを順次実行することを担うCellを記述する。
このCellは以下の主要な責任を持つ。

- 計画されたStepを解釈し、実行する。
- 各Stepの種類に応じて、適切な内部処理 (ファイル編集、コマンド実行など) を呼び出す。
- 実行結果や生成物を整理し、最終的に報告する。
- 実行中に発生したエラーや予期せぬ結果を検知し、定義された手順 (Error Handling Stage) に従って対応する。

## 2. 依存関係

- 入力:
    - `02_planner.mdc` からの実行計画と関連コンテキスト
- 参照:
    - 常時参照
        - `.cursor/rules/configs/behavior.md`: 応答スタイル
        - `.cursor/rules/configs/prompting.md`: 思考プロセス
    - 必要時参照
        - `.cursor/rules/configs/markdown.md`: Markdownのスタイルガイド
        - プロジェクト基本文書 (`architecture.md`)
- 出力/連携先:
    - ユーザーへの報告 (正常完了時の実行結果)
    - `02_planner.mdc` への報告 (エラー発生による計画見直し依頼の場合)

## 3. Stages (ワークフローステップ)

呼び出された後、直ちに以下の Stage を順に実行する。

### Stage 3a-start: Initialization and Context Confirmation (TIDE Protocol Step 7)

**目的:** Cell開始を宣言し、`02_planner` からのコンテキスト (実行計画) を確認する。

1.  **状態遷移宣言: 開始 (TIDE Step 7):**
    > 「`03_a_executor_planned` です。」
2.  **コンテキスト確認:** `02_planner` から渡された引継ぎ重要コンテキストを確認する。

### Stage 3a-a: Execution Setup

**目的:** 計画実行に必要な環境とコンテキストを準備・確認する。

1.  **実行環境確認:** 必要なツールが利用可能か確認する。
2.  **計画再確認:** Stage 3a-start で確認した計画内容を再確認する。

### Stage 3a-b: Planned Step Execution Loop

**目的:** `02_planner` から渡された計画を、一切省略せず、計画通り、確実に遂行する。仮定の合意に基づいて処理を進めることはしない。

1.  **計画されたStep取得:** 次に実行すべき計画のStepを取得する。
2.  **計画されたタスクの種類判断:** 計画されたStepの内容に基づき、実行すべきタスクの種類 (ファイル編集、コマンド実行、別 Executor 呼び出しなど) を判断する。その際、別Executorによるオーバーヘッドを減らし、1回のExecution Loopで出来るだけ多くの処理を遂行することを意識する。
3.  **タスク実行:**
    - ファイル編集の場合: `03_b_executor_coding.mdc` (コード) または `03_c_executor_markdownedit.mdc` (Markdown) を **TIDEプロトコル経由で呼び出し、タスクを委任する。その際、呼び出すExecutorが持つ自己評価・自己修正能力を最大限に活用するよう指示する。
    - コマンド実行の場合: `03_d_executor_terminal.mdc` を **TIDEプロトコル経由で呼び出し、タスクを委任する。その際、呼び出すExecutorが持つ自己評価・自己修正能力を最大限に活用するよう指示する。
    - 各ステップの実行責任と結果報告のタイミング・内容を明確に計画・指示する。
4.  **結果確認:** 各Stepの実行結果を確認し、問題があれば Stage 3a-e (Error Handling) へ移行します。
5.  **ループ継続:** 全ての計画Stepが完了するまで 1 に戻ります。

### Stage 3a-c: Overall Result Aggregation and Assessment

**目的:** 全ての計画Step実行後、最終的な成果物が期待通りかを確認し、**計画全体の達成度と品質を評価する。**

1.  **情報収集:** 各ステップを実行した下位Executorからの報告（自己評価結果、自己修正内容、未解決の問題点などを含む）を収集・整理する。
2.  **成果物検証:** 生成/変更されたファイルや状態が、計画全体の目標と整合しているか検証する。
3.  **評価: 計画全体の目標が達成されたか、各ステップの成果物が期待通りか、ステップ間の依存関係に問題はなかったかなどを総合的に評価する。
4.  **サマリー作成:** 計画実行中に発生した問題点、その対処法、そして最終的な成果物の品質について、サマリーを作成する。
5.  **問題検出:** 期待との不一致や、総合評価の結果、計画全体の品質に問題があれば Stage 3a-e (Error Handling) へ移行する。

### Stage 3a-d: Reporting (Normal Completion)

**目的:** タスクの実行結果、成果物などを整理し、ユーザーに報告して完了する。

1.  **結果整理:** 実行した計画Step全体の結果、最終的な成果物を整理する。
2.  **報告:** 実行結果をユーザーに報告する。
3.  **最終応答:**
    > 「これをもって、`03_a_executor_planned` としての処理は完了します。」

### Stage 3a-e: Error Handling & Handover (TIDE Protocol on Handover)

**目的:** 実行中に発生したエラーに対応し、自己修正、計画見直し依頼 (TIDE 適用)、またはユーザーへの相談を行う。

1.  **問題検知:** Stage 3a-b, 3a-c でのエラーを検知する。
2.  **原因分析:** 可能であれば原因を推測する。
3.  **対応判断:**
    - **自己修正:** 簡単な問題は試行する (例: `reapply`)。成功すれば元の Stage へ。
    - **計画見直し依頼 (Handover via TIDE):** 計画自体の問題が疑われる場合。またはいずれかのステップの失敗が後続ステップの実行可能性や計画全体の達成に重大な影響を与えると判断される場合。
        - **(Step 1-2) 遷移トリガー/判断, 次Cell特定:** `02_planner` へ差し戻しを決定。
        - **(Step 3) 重要コンテキスト指定:** エラー情報、状況、差し戻し理由、**および影響分析（どのステップが影響を受け、計画のどの部分を見直す必要があるかの初期的な考察）。**
        - **(Step 4) 状態遷移宣言: 終了:** 宣言文 (Planner への引き継ぎ)。
        - **(Step 5) 次Cellルール適用:** `fetch_rules` で `02_planner` を読み込み指示。
        - **(Step 6) 現Cellの最終応答:** ユーザーへの最終応答 (Planner への引き継ぎ)。
    *   **ユーザー相談:** AI で判断困難な場合。問題と状況を報告し指示を仰ぐ。
4.  **ユーザーへの報告・相談 (ユーザー相談選択時):** 状況を明確に報告する。
